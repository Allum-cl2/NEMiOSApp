<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "UnconfirmedTransactionVC.unconfirmedTransactionsResponceWithTransactions([TransactionPostMetaData]?) -&gt; ():UnconfirmedTransactionVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "publicKey == sign.signer">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MessageGetMetaData.getMessageString() -&gt; String?:MessageGetMetaData.swift">
         <PersistentStrings>
            <PersistentString
               value = "KeyGenerator.generatePublicKey(privateKey)">
            </PersistentString>
            <PersistentString
               value = "bytes.toHexString()">
            </PersistentString>
            <PersistentString
               value = " messageData.hexadecimalString()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static MessageCrypto.decrypt([UInt8], recipientPrivateKey : String, senderPublicKey : String) -&gt; String:MessageCrypto.swift">
         <PersistentStrings>
            <PersistentString
               value = "messageData.hexadecimalString()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AES.(encryptBlock in _2FA9B7ACC72B80C564A140F8079C9914)([UInt8]) -&gt; [UInt8]?:AES.swift">
         <PersistentStrings>
            <PersistentString
               value = "self.variant.Nr">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "APIManager.(accountTransfersAll(APIManager) -&gt; (Server, account_address : String) -&gt; ()).(closure #1).(closure #1).(closure #1):APIManager.swift">
      </ContextState>
      <ContextState
         contextName = "MultisigAccountManager.((_generateTableData in _FB8019F99D1B58415A78642842244E35)(MultisigAccountManager) -&gt; () -&gt; ()).(closure #1):MultisigAccountManager.swift">
      </ContextState>
      <ContextState
         contextName = "SendTransactionVC.countTransactionFee() -&gt; ():SendTransactionVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "xems">
            </PersistentString>
            <PersistentString
               value = "atan(xems / 150000) * 99">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static Validate.address(String?, length : Int) -&gt; Bool:Validate.swift">
         <PersistentStrings>
            <PersistentString
               value = "count(&quot;TCQOCOKR5PGFUGIPPU27U3ATVS5KMVYK6C4UT7PA&quot;)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MultisigAccountManager.tableView(UITableView, numberOfRowsInSection : Int) -&gt; Int:MultisigAccountManager.swift">
      </ContextState>
      <ContextState
         contextName = "PasswordValidationVC.passwordValidation(AnyObject) -&gt; ():PasswordValidationVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "State.toVC">
            </PersistentString>
            <PersistentString
               value = "State.nextVC">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "LoginVC.tableView(UITableView, didSelectRowAtIndexPath : NSIndexPath) -&gt; ():LoginVC.swift">
      </ContextState>
      <ContextState
         contextName = "static MessageCrypto.encrypt(String, senderPrivateKey : String, recipientPublicKey : String) -&gt; [UInt8]:MessageCrypto.swift">
         <PersistentStrings>
            <PersistentString
               value = "ivData.arrayOfBytes()">
            </PersistentString>
            <PersistentString
               value = "sharedSecretBytes.bytes">
            </PersistentString>
            <PersistentString
               value = "NSData(bytes: &amp;sharedSecretBytes, length: sharedSecretBytes.count).hexadecimalString()">
            </PersistentString>
            <PersistentString
               value = "messageData.hexadecimalString()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AES.init(key : [UInt8], iv : [UInt8], blockMode : CipherBlockMode) throws -&gt; AES:AES.swift">
         <PersistentStrings>
            <PersistentString
               value = "AES.blockSize">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SendTransactionVC.(_sendTransferTransaction in _AC1CA8B62DDF446E90A37A06FAB51D09)() -&gt; ():SendTransactionVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "Double(xems)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UISegmentedControl.removeBorders() -&gt; ():UISegmentedControlExtensions.swift">
         <PersistentStrings>
            <PersistentString
               value = "backgroundColor">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "APIManager.(accountTransfersAll(APIManager) -&gt; (Server, account_address : String) -&gt; ()).(closure #1).(closure #1):APIManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "error?.localizedDescription">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AddressBook.tableView(UITableView, cellForRowAtIndexPath : NSIndexPath) -&gt; UITableViewCell:AddressBook.swift">
      </ContextState>
      <ContextState
         contextName = "APIManager.(accountGet(APIManager) -&gt; (Server, account_address : String) -&gt; ()).(closure #1).(closure #1).(closure #3):APIManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "layers">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PKCS7.remove([UInt8], blockSize : Int?) -&gt; [UInt8]:PKCS7.swift">
      </ContextState>
      <ContextState
         contextName = "Messages.refreshTransactionList() -&gt; ():Messages.swift">
         <PersistentStrings>
            <PersistentString
               value = "privateKey.asByteArray()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ImportFromQR.(detectedQRWithString(ImportFromQR) -&gt; (String) -&gt; ()).(closure #1):ImportFromQR.swift">
         <PersistentStrings>
            <PersistentString
               value = "passwordHash.toHexString()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ShareViewController.delegateIsSetted() -&gt; ():ShareViewController.swift">
      </ContextState>
      <ContextState
         contextName = "static SignManager.commonPart(TransactionPostMetaData, isMultisignPart : Bool) -&gt; [UInt8]:SignManager.swift">
      </ContextState>
      <ContextState
         contextName = "MultisigAccountManager.(_generateTableData in _FB8019F99D1B58415A78642842244E35)() -&gt; ():MultisigAccountManager.swift">
      </ContextState>
      <ContextState
         contextName = "QRViewController.backButtonTouchUpInside(AnyObject) -&gt; ():QRViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "State.lastVC">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ImportFromQR.(detectedQRWithString(ImportFromQR) -&gt; (String) -&gt; ()).(closure #3):ImportFromQR.swift">
         <PersistentStrings>
            <PersistentString
               value = "HashManager.AES256Decrypt(privateKey_AES, key: passwordHash!.toHexString())">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "AES.encrypt([UInt8], padding : Padding?) throws -&gt; [UInt8]:AES.swift">
      </ContextState>
      <ContextState
         contextName = "TransferTransaction.getFrom(NSDictionary) -&gt; ():TransferTransaction.swift">
      </ContextState>
      <ContextState
         contextName = "FetchManager.update((UIBackgroundFetchResult) -&gt; ()) -&gt; ():FetchManager.swift">
      </ContextState>
      <ContextState
         contextName = "MessageVC.tableView(UITableView, cellForRowAtIndexPath : NSIndexPath) -&gt; UITableViewCell:MessageVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "indexPath.row">
            </PersistentString>
            <PersistentString
               value = "contact.public_key">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ShareViewController.viewDidLoad() -&gt; ():ShareViewController.swift">
      </ContextState>
      <ContextState
         contextName = "MessageVC.heightForCell(NSMutableAttributedString, width : CGFloat) -&gt; CGFloat:MessageVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "label.frame.height">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static State.lastVC.getter:State.swift">
         <PersistentStrings>
            <PersistentString
               value = "State.Store.stackVC">
            </PersistentString>
            <PersistentString
               value = "State.Store.stackVC.last!">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UnconfirmedTransactionVC.accountGetResponceWithAccount(AccountGetMetaData?) -&gt; ():UnconfirmedTransactionVC.swift">
      </ContextState>
      <ContextState
         contextName = "FetchManager.(fetchUpdate in _3EB8C89C7662CBB9F2E0C13E534722D7)() -&gt; ():FetchManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "_account!.login">
            </PersistentString>
            <PersistentString
               value = "_accounts.count">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "BlockGetMetaData.getFrom(NSDictionary) -&gt; BlockGetMetaData:BlockGetMetaData.swift">
         <PersistentStrings>
            <PersistentString
               value = "dictionary.objectForKey(&quot;timeStamp&quot;) as! Int">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ChousePrimAccountVC.tableView(UITableView, cellForRowAtIndexPath : NSIndexPath) -&gt; UITableViewCell:ChousePrimAccountVC.swift">
      </ContextState>
      <ContextState
         contextName = "AddressBook.contactAdded(Bool) -&gt; ():AddressBook.swift">
      </ContextState>
      <ContextState
         contextName = "EditableTableViewCell.layoutSubviews() -&gt; ():EditableTableViewCell.swift">
      </ContextState>
      <ContextState
         contextName = "LoginVC.nameChanged(String) -&gt; ():LoginVC.swift">
      </ContextState>
      <ContextState
         contextName = "ImportFromQR.detectedQRWithString(String) -&gt; ():ImportFromQR.swift">
      </ContextState>
      <ContextState
         contextName = "SettingsVC.(_refreshData in _1639DD24202DBBCF765D6D0F01621867)() -&gt; ():SettingsVC.swift">
      </ContextState>
      <ContextState
         contextName = "+[NSData(AESAdditions) doCipher:iv:key:error:]:Crypto.m">
      </ContextState>
      <ContextState
         contextName = "NSData.aesEncrypt([UInt8], iv : [UInt8]) -&gt; NSData?:NSDataExtensions.swift">
         <PersistentStrings>
            <PersistentString
               value = "key.asByteArray()">
            </PersistentString>
            <PersistentString
               value = "enc.toHexString()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MessageVC.(accountGetResponceWithAccount(MessageVC) -&gt; (AccountGetMetaData?) -&gt; ()).(closure #1):MessageVC.swift">
      </ContextState>
      <ContextState
         contextName = "AES.decrypt([UInt8], padding : Padding?) throws -&gt; [UInt8]:AES.swift">
         <PersistentStrings>
            <PersistentString
               value = "padding.lastByte">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "APIManager.(prepareAnnounce(APIManager) -&gt; (Server, transaction : TransactionPostMetaData) -&gt; ()).(closure #1).(closure #1):APIManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "(layers! as NSDictionary).objectForKey(&quot;innerTransaction&quot;) ">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MessageVC.defineData() -&gt; ():MessageVC.swift">
      </ContextState>
      <ContextState
         contextName = "CreateQRInput.viewDidLoad() -&gt; ():CreateQRInput.swift">
         <PersistentStrings>
            <PersistentString
               value = "message.text">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static SignManager.aggregateModificationTransactionPart(AggregateModificationTransaction) -&gt; [UInt8]:SignManager.swift">
      </ContextState>
      <ContextState
         contextName = "static HashManager.AES256Decrypt(String, key : String) -&gt; String?:HashManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "print(data)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UnconfirmedTransactionVC.tableView(UITableView, cellForRowAtIndexPath : NSIndexPath) -&gt; UITableViewCell:UnconfirmedTransactionVC.swift">
      </ContextState>
      <ContextState
         contextName = "WalletGenerator.createWallet(String, password : String, privateKey : String?) -&gt; ():WalletGenerator.swift">
         <PersistentStrings>
            <PersistentString
               value = "print(salt)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MultisigAccountManager.accountGetResponceWithAccount(AccountGetMetaData?) -&gt; ():MultisigAccountManager.swift">
      </ContextState>
      <ContextState
         contextName = "SocialManager.facebookPostToWall(String?, images : [UIImage]?, urls : [NSURL]?) -&gt; ():SocialManager.swift">
      </ContextState>
      <ContextState
         contextName = "MultisigAccountManager.tableView(UITableView, cellForRowAtIndexPath : NSIndexPath) -&gt; UITableViewCell:MultisigAccountManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "indexPath.row">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ProfileVC.accountGetResponceWithAccount(AccountGetMetaData?) -&gt; ():ProfileVC.swift">
      </ContextState>
      <ContextState
         contextName = "static MessageCrypto.encrypt([UInt8], senderPrivateKey : String, recipientPublicKey : String) -&gt; [UInt8]:MessageCrypto.swift">
         <PersistentStrings>
            <PersistentString
               value = "result.toHexString()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SendTransactionVC.accountGetResponceWithAccount(AccountGetMetaData?) -&gt; ():SendTransactionVC.swift">
      </ContextState>
      <ContextState
         contextName = "HarvestDetailsVC.accountGetResponceWithAccount(AccountGetMetaData?) -&gt; ():HarvestDetailsVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "account!.harvestedBlocks">
            </PersistentString>
            <PersistentString
               value = "String(format:  &quot;%d&quot;, account!.harvestedBlocks)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "Messages.tableView(UITableView, cellForRowAtIndexPath : NSIndexPath) -&gt; UITableViewCell:Messages.swift">
         <PersistentStrings>
            <PersistentString
               value = "transaction!.amount">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MainContainerVC.changePage(String) -&gt; ():MainContainerVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "State.currentVC">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "SendTransactionVC.send(AnyObject) -&gt; ():SendTransactionVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "amountTextField.text">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static MessageCrypto.decrypt([UInt8], recipientPrivateKey : String, senderPublicKey : String) -&gt; String?:MessageCrypto.swift">
         <PersistentStrings>
            <PersistentString
               value = "encBytes.toHexString()">
            </PersistentString>
            <PersistentString
               value = "NSString(data: messageData, encoding: NSASCIIStringEncoding) as? String">
            </PersistentString>
            <PersistentString
               value = "messageData.hexadecimalString()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "static State.toVC.setter:State.swift">
         <PersistentStrings>
            <PersistentString
               value = "Statte.Store.stackVC">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NSData.aesEncrypt(String, iv : String) -&gt; NSData?:NSDataExtensions.swift">
         <PersistentStrings>
            <PersistentString
               value = "iv.utf16">
            </PersistentString>
            <PersistentString
               value = "self.arrayOfBytes()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UnconfirmedTransactionVC.confirmTransactionAtIndex(Int) -&gt; ():UnconfirmedTransactionVC.swift">
      </ContextState>
      <ContextState
         contextName = "MessageVC.sendButtonTouchUpInside(AnyObject) -&gt; ():MessageVC.swift">
         <PersistentStrings>
            <PersistentString
               value = "HashManager.AES256Decrypt(State.currentWallet!.privateKey)">
            </PersistentString>
            <PersistentString
               value = "contact.public_key">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "InvoceSettings.viewDidLoad() -&gt; ():InvoceSettings.swift">
         <PersistentStrings>
            <PersistentString
               value = "loadData?.invoicePostfix">
            </PersistentString>
            <PersistentString
               value = "loadData?.invoicePrefix">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NSData.aesDecrypt([UInt8], iv : [UInt8]) -&gt; NSData?:NSDataExtensions.swift">
         <PersistentStrings>
            <PersistentString
               value = "decData.hexadecimalString()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "PKCS7.add([UInt8], blockSize : Int) -&gt; [UInt8]:PKCS7.swift">
      </ContextState>
      <ContextState
         contextName = "static SignManager.transferTransactionPart(TransferTransaction) -&gt; [UInt8]:SignManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "String(Int64(transaction.amount * 1000000), radix: 16)">
            </PersistentString>
            <PersistentString
               value = "payload.toHexString()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ViewController.viewDidLoad() -&gt; ():ViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "&quot;00000000000000000000000000000000&quot;.characters.count">
            </PersistentString>
            <PersistentString
               value = "try? NSData.doCipher(message, iv: NSData(bytes: &amp;iv, length: iv.count), key: NSData(bytes: &amp;key, length: key.count))">
            </PersistentString>
            <PersistentString
               value = "sharedSecretTwo.toHexString()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ed25519_key_exchange_nem:generator.c">
      </ContextState>
   </ContextStates>
</VariablesViewState>
